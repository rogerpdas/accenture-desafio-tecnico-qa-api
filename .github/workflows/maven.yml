# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI Pipeline - Cucumber Tests

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # 1. Checkout do repositório
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configura o Java (ajustado para 17, como no seu pom.xml)
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      # 3. Cache do repositório Maven (para builds mais rápidos)
      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      # 4. Rodar testes com Maven
      - name: Run tests with Maven
        run: mvn clean test -B

      # 5. Publicar report do Cucumber no GitHub Pages
      - name: Deploy Cucumber Report to GitHub Pages
        if: success() || failure() # publica mesmo se falhar para visualizar evidências
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./target/html-reports

      # 6. Acesso ao report
      - name: Cucumber Report URL
        run: echo "O relatório do Cucumber estará disponível em: https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/cucumber.html"
